name: $(Date:yyyyMMdd)$(Rev:.r)
trigger:
  - main
stages:
  - stage: auth
    displayName: "GCP WIF Auth"
    jobs:
      - job: demo
        timeoutInMinutes: 20
        steps:
          - task: AzureCLI@2
            name: azurecli
            inputs:
              azureSubscription: 'oidc-test-gcp'
              scriptType: 'bash'
              scriptLocation: 'inlineScript'
              inlineScript: |
                echo -----------------------------------------------
                echo START TARGET ENVIRONMENT VARIABLES
                echo -----------------------------------------------

                GCP_ACCOUNT_NUMBER=$(GCP_ACCOUNT_NUMBER)
                GCP_WIF_POOL_ID=$(GCP_WIF_POOL_ID)
                GCP_WIF_PROVIDER_ID=$(GCP_WIF_PROVIDER_ID)
                GCP_ACCOUNT_NAME=$(GCP_ACCOUNT_NAME)
                GCP_SA=$(GCP_SA)
                BACKEND_PREFIX=$(BACKEND_PREFIX)
                BACKEND_BUCKET=$(BACKEND_BUCKET)
                
                # terraform project variable
                
                #echo TF_VAR
                #TF_VAR_var_project=coen-matthew-rawles
                #echo $TF_VAR_var_project

                echo -----------------------------------------------
                echo END TARGET ENVIRONMENT VARIABLES
                echo -----------------------------------------------

                echo -----------------------------------------------
                echo GENERATE GCP STS TOKEN USING AZURE ACCESS TOKEN
                echo -----------------------------------------------

                SUBJECT_TOKEN_TYPE="urn:ietf:params:oauth:token-type:jwt"
                SUBJECT_TOKEN=$(az account get-access-token --query accessToken --output tsv)
                
                # echo SUBJECT_TOKEN
                # echo $SUBJECT_TOKEN
                
                STS_TOKEN=$(curl --silent -0 -X POST https://sts.googleapis.com/v1/token \
                    -H 'Content-Type: text/json; charset=utf-8' \
                    -d @- <<EOF | jq -r .access_token
                    {
                        "audience"           : "//iam.googleapis.com/projects/$GCP_ACCOUNT_NUMBER/locations/global/workloadIdentityPools/$GCP_WIF_POOL_ID/providers/$GCP_WIF_PROVIDER_ID",
                        "grantType"          : "urn:ietf:params:oauth:grant-type:token-exchange",
                        "requestedTokenType" : "urn:ietf:params:oauth:token-type:access_token",
                        "scope"              : "https://www.googleapis.com/auth/cloud-platform",
                        "subjectTokenType"   : "$SUBJECT_TOKEN_TYPE",
                        "subjectToken"       : "$SUBJECT_TOKEN"
                    }
                EOF)

                # echo STS_TOKEN
                # echo $STS_TOKEN

                echo -----------------------------------------------
                echo GENERATE ACCESS TOKEN
                echo -----------------------------------------------

                ACCESS_TOKEN=$(curl --silent -0 -X POST https://iamcredentials.googleapis.com/v1/projects/-/serviceAccounts/$GCP_SA:generateAccessToken \
                    -H "Content-Type: text/json; charset=utf-8" \
                    -H "Authorization: Bearer $STS_TOKEN" \
                    -d @- <<EOF | jq -r .accessToken
                      {
                          "scope": [ "https://www.googleapis.com/auth/cloud-platform" ]
                      }
                EOF)

                # echo "Access Token"
                # echo $ACCESS_TOKEN

                echo -----------------------------------------------
                echo TEST THE ACCESS TOKEN WITH CURL
                echo -----------------------------------------------
                # test the token is valid
                curl -H "Content-Type: application/x-www-form-urlencoded" -d "access_token=$ACCESS_TOKEN" https://www.googleapis.com/oauth2/v1/tokeninfo

                # echo -----------------------------------------------
                # echo TEST THE ACCESS TOKEN WITH TERRAFORM
                # echo -----------------------------------------------     
                
                # echo -----------------------------------------------
                # echo SET GOOGLE_OAUTH_ACCESS_TOKEN
                # echo -----------------------------------------------   

                export GOOGLE_OAUTH_ACCESS_TOKEN=$ACCESS_TOKEN
                echo "##vso[task.setvariable variable=GOOGLE_OAUTH_ACCESS_TOKEN;isOutput=true]$GOOGLE_OAUTH_ACCESS_TOKEN"

                # # echo -----------------------------------------------
                # echo RUN SOME TERRAFORM AS THE SA
                # echo -----------------------------------------------   
                cd layers/000base

                # # use backend details from project env vars.
                terraform init \
                  -backend-config="prefix=$BACKEND_PREFIX" \
                  -backend-config="bucket=$BACKEND_BUCKET" \
                  -reconfigure

                terraform plan -var="var_project=$(TF_VAR_var_project)"
                
          - bash: |
              echo "$(azurecli.GOOGLE_OAUTH_ACCESS_TOKEN)"
                