
name: 5 TF Plan Azure OIDC-Key Docker TF CLI (Access Key Backend)

on:
  workflow_dispatch:
    inputs:
      destroy:
        type: boolean
        description: Destroy environment?
        required: true
        default: false
        
env:
  tf_actions_working_dir: layers/000base

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout

jobs:
  container-test-job:
    runs-on: ubuntu-latest
    environment: tfplan
    continue-on-error: true
    defaults:
      run:
        working-directory: ${{ env.tf_actions_working_dir }}
    container:
      image: codeinavan/pipeline-toolbox-azure:latest
      env:
        NODE_ENV: tfplan
        ARM_CLIENT_ID: ${{ secrets.AZURE_CLIENT_ID }}
        ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
        ARM_TENANT_ID: ${{ secrets.AZURE_TENANT_ID }}
        TF_LOG: "DEBUG"
        BACKEND_RG: ${{ secrets.BACKEND_RG}}
        BACKEND_SG: ${{ secrets.BACKEND_SG}}
        BACKEND_CONTAINER: ${{ secrets.BACKEND_CONTAINER}}
        BACKEND_KEY: ${{ secrets.BACKEND_KEY}}

    steps:

    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Terraform version
      id: version
      run: terraform --version
        
    - name: Terraform env
      id: printenv
      run: printenv

    - name: Terraform Init access key
      id: init-access-key
      run: |
        terraform init \
          -backend-config="use_oidc=$ARM_USE_OIDC" \
          -backend-config="resource_group_name=$BACKEND_RG" \
          -backend-config="storage_account_name=$BACKEND_SG" \
          -backend-config="container_name=$BACKEND_CONTAINER" \
          -backend-config="key=$BACKEND_KEY" \
          -backend-config="access_key=$ARM_ACCESS_KEY" \
          -reconfigure
      env:
        TF_LOG_PATH: "terraform-access-key.log"
        ARM_USE_OIDC: false
        ARM_ACCESS_KEY: ${{ secrets.BACKEND_ACCESS_KEY }}

    - name: Upload the accesskey debug log
      uses: actions/upload-artifact@v3
      with:
        name: tf-debug-key-log
        path: "/tmp/terraform-access-key.log"



    - name: Calculate destroy arg
      id: destroy_arg
      run: |
        if [ $DESTROY == "true" ]; then
          echo "::set-output name=val::-destroy" 
        else
          echo "::set-output name=val:: "
        fi
      env:
        DESTROY: ${{ github.event.inputs.destroy }}

    - name: Terraform Plan OIDC
      id: plan
      run: terraform plan $DESTROY -no-color -out=/tmp/out.tfplan
      env:
        DESTROY: ${{ steps.destroy_arg.outputs.val }}
        ARM_USE_OIDC: true
        TF_LOG_PATH: "/tmp/terraform-plan-oidc.log"

    - name: Upload the plan oidc debug log
      uses: actions/upload-artifact@v3
      with:
        name: tf-debug-plan-oidc-log
        path: "/tmp/terraform-plan-oidc.log"
    
    - name: Upload the plan
      uses: actions/upload-artifact@v3
      with:
        name: tf-plan
        path: "/tmp/out.tfplan"

